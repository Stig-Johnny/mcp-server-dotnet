{{- if .Values.cloudflared.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "mcp-server-dotnet.fullname" . }}-cloudflared
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "mcp-server-dotnet.labels" . | nindent 4 }}
    app.kubernetes.io/component: cloudflared
spec:
  replicas: {{ .Values.cloudflared.replicaCount }}
  selector:
    matchLabels:
      {{- include "mcp-server-dotnet.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: cloudflared
  template:
    metadata:
      labels:
        {{- include "mcp-server-dotnet.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: cloudflared
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap-cloudflared.yaml") . | sha256sum }}
    spec:
      serviceAccountName: {{ include "mcp-server-dotnet.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
      - name: cloudflared
        image: "{{ .Values.cloudflared.image.repository }}:{{ .Values.cloudflared.image.tag }}"
        imagePullPolicy: {{ .Values.cloudflared.image.pullPolicy }}
        args:
        - tunnel
        - --config
        - /etc/cloudflared/config/config.yaml
        - run
        - {{ .Values.cloudflared.tunnel.id | quote }}
        ports:
        - name: metrics
          containerPort: 2000
          protocol: TCP
        resources:
          {{- toYaml .Values.cloudflared.resources | nindent 10 }}
        securityContext:
          {{- toYaml .Values.cloudflared.securityContext | nindent 10 }}
        volumeMounts:
        - name: config
          mountPath: /etc/cloudflared/config
          readOnly: true
        - name: creds
          mountPath: /etc/cloudflared/creds
          readOnly: true
        - name: tmp
          mountPath: /tmp
        livenessProbe:
          httpGet:
            path: /ready
            port: 2000
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /ready
            port: 2000
          initialDelaySeconds: 10
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
      volumes:
      - name: config
        configMap:
          name: {{ include "mcp-server-dotnet.fullname" . }}-cloudflared-config
      - name: creds
        secret:
          secretName: {{ include "mcp-server-dotnet.fullname" . }}-cloudflared-creds
      - name: tmp
        emptyDir: {}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
{{- end }}